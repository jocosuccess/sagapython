
# Header signatures are generated by the client transaction builder.
# The signatures are includes as variables.
# They are a signature of the hash of the hdr.
# Because the header includes a sequence number, a replay
# attack with the signatures isn't possible.

# Assume that there are two accounts, and that the transaction
# is to transfer funds between these two accounts:
# Signature variable names are: FromAccountSig and ToAccountSig
# Further, that there are two OID definitions passed in as well as variable names:
# FromAccount, ToAccount, and TransferAmount as the amount to transfer

def __hdr():
    hdr = { 'acct': 'aaa', 
	    'seq': 1000,        # whatever the next sequence number is 
		'maxGU': 10, 
		'feePerGU': 1,
		'extraPerGU': 2
        }
    return hdr 

def __body():
    from = ClsObjVar(FromAccount)
    to = ClsObjVar(ToAccount)
    coins = from().take(TransferAmount, sig = FromAccountSig)
    if coins != TransferAmount:
        Log(error)
        ErrorExit()
    
    err = to().put(TransferAmount, sig = ToAccountSig)
    if err != None:
        Log(error)
        ErrorExit()

def __tail():
    return {'hash': 12345,
            'sig': (rvalue, svalue)    # tuple of r and s value for signature
    }                  